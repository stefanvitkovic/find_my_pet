name: Users
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get list of users'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
               {
                   "id": 1,
                   "name": "John Doe",
                   "email": "john@example.com",
                   "pets": [
                       {
                           "id": 1,
                           "name": "Fluffy"
                       }
                   ]
               }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show user by ID'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'user ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
               "id": 1,
               "name": "John Doe",
               "email": "john@example.com",
               "address": "Main Street 123"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "No user founded!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user by ID'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'user ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'optional user name.'
        required: false
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'optional Email.'
        required: false
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      address:
        name: address
        description: 'optional Address.'
        required: false
        example: 'Main Street 123'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      city:
        name: city
        description: 'optional city.'
        required: false
        example: Belgrade
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone_nummber:
        name: phone_nummber
        description: 'optional phone number.'
        required: false
        example: 123-456-789
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      admin:
        name: admin
        description: 'optional is user admin.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      missing_notification:
        name: missing_notification
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      share_name:
        name: share_name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      share_other_contact:
        name: share_other_contact
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      share_contact:
        name: share_contact
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      share_address:
        name: share_address
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      share_vet_info:
        name: share_vet_info
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      superadmin:
        name: superadmin
        description: 'optional is user superadmin.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      status:
        name: status
        description: 'optional user status.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      username:
        name: username
        description: 'optional username.'
        required: false
        example: johndoe
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      address: 'Main Street 123'
      city: Belgrade
      phone_nummber: 123-456-789
      admin: 0
      superadmin: 0
      status: 1
      username: johndoe
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
               "id": 1,
               "name": "John Doe",
               "email": "john@example.com",
               "address": "Main Street 123"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "No user founded!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete user by ID'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'user ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "User deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
           "message": "User is superadmin"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "No user founded!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/default
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a default user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      default:
        name: default
        description: required.
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      default: true
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "data": {
               "id": 1,
               "name": "Default User"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "Default user not selected!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
